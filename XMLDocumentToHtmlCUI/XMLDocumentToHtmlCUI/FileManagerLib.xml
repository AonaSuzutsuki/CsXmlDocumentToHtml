<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FileManagerLib</name>
    </assembly>
    <members>
        <member name="T:FileManagerLib.Dat.DatFileManager">
            <summary>
            データファイルの管理を提供します。
            </summary>
        </member>
        <member name="P:FileManagerLib.Dat.DatFileManager.SplitSize">
            <summary>
            ファイルへの書き込みの際に分割読み込みをするしきい値
            </summary>
        </member>
        <member name="P:FileManagerLib.Dat.DatFileManager.IsShiftJsonPosition">
            <summary>
            既に書き込まれているJSONをスキップして書き込むか上書きするかどうかを設定または取得します。
            </summary>
        </member>
        <member name="P:FileManagerLib.Dat.DatFileManager.LastPositionWithoutJson">
            <summary>
            取り除くべき既に書き込まれているJSONのサイズを負数ベースで返します。
            </summary>
        </member>
        <member name="P:FileManagerLib.Dat.DatFileManager.IsCheckHash">
            <summary>
            ハッシュ計算によるデータの整合性を確認するかどうかを設定あるいは取得します。
            </summary>
        </member>
        <member name="M:FileManagerLib.Dat.DatFileManager.GetBytes(System.Int64,System.Int32)">
            <summary>
            指定された位置からデータの長さを除いたデータをバイト配列で返します。
            </summary>
            <param name="start">データの開始位置を指定します。</param>
            <param name="identifierLength">データの長さを格納するバイトサイズを指定します。</param>
            <returns>実データのバイト配列</returns>
        </member>
        <member name="M:FileManagerLib.Dat.DatFileManager.GetBytesFromEnd(System.Int32)">
            <summary>
            末尾から実データの長さを除いたデータをバイト配列で返します。
            </summary>
            <param name="identifierLength">データの長さを格納するバイトサイズ</param>
            <returns>実データのバイト配列</returns>
        </member>
        <member name="M:FileManagerLib.Dat.DatFileManager.GetPartialBytes(System.Int64,System.Int64,System.Int32)">
            <summary>
            指定された位置からデータの長さを除いたデータの部分をバイト配列で返します。
            </summary>
            <param name="start">データの開始位置を指定します。</param>
            <param name="length">取得したいデータの長さを指定します。</param>
            <param name="identifierLength">データの長さを格納するバイトサイズを指定します。</param>
            <returns>実データの部分バイト配列</returns>
        </member>
        <member name="M:FileManagerLib.File.Json.JsonFileManager.ResolveAbsolutePath(System.String,System.String,System.String[])">
            <summary>
            Convert path on file system to internal path.
            </summary>
            <param name="basePath">dir path on file system</param>
            <param name="parent">internal parent directory path</param>
            <param name="dirPathArray">filepaths on file system</param>
            <returns></returns>
        </member>
        <member name="T:FileManagerLib.File.DirectorySearcher">
            <summary>
            ディレクトリの検索機能を提供します。
            </summary>
        </member>
        <member name="M:FileManagerLib.File.DirectorySearcher.GetAllDirectories(System.String)">
            <summary>
            Gets all nested directories.
            </summary>
            <returns>The all directories.</returns>
            <param name="path">Directory path.</param>
        </member>
        <member name="M:FileManagerLib.File.DirectorySearcher.GetAllFiles(System.String)">
            <summary>
            Gets all nested files.
            </summary>
            <returns>The all files.</returns>
            <param name="path">Directory path.</param>
        </member>
        <member name="M:FileManagerLib.File.DirectorySearcher.CountFiles(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="dirArray"></param>
            <returns></returns>
        </member>
        <member name="T:FileManagerLib.Crypto.Sha256">
            <summary>
            Sha256を計算するクラスを提供します。
            </summary>
        </member>
        <member name="M:FileManagerLib.Crypto.Sha256.GetSha256(System.IO.Stream)">
            <summary>
            StreamからSHA256を計算します。
            </summary>
            <param name="stream">計算する対象のStream</param>
            <returns>変換されたSHA256の文字列</returns>
        </member>
        <member name="M:FileManagerLib.Crypto.Sha256.GetSha256(System.Byte[])">
            <summary>
            バイト配列からSHA256を計算します。
            </summary>
            <param name="bytes">計算する対象のバイト配列</param>
            <returns>変換されたSHA256の文字列</returns>
        </member>
    </members>
</doc>
